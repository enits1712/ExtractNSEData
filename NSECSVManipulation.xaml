<Activity mc:Ignorable="sap sap2010" x:Class="Create_Summary_Report" VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="1114.4,2243.2" sap2010:WorkflowViewState.IdRef="Create_Summary_Report_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:si="clr-namespace:System.IO;assembly=System.Private.CoreLib" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ueabf="clr-namespace:UiPath.Excel.Activities.Business.Filter;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>UiPath.CSV</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.Excel.Activities.Business.Filter</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>Microsoft.Graph</AssemblyReference>
      <AssemblyReference>Microsoft.Graph.Core</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Async.Queryable</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="NSECSVManipulation" sap:VirtualizedContainerService.HintSize="1282,3978" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="dtNSEData" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" DisplayName="Excel Process Scope" sap:VirtualizedContainerService.HintSize="654,3955" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_1">
      <ueab:ExcelProcessScopeX.Body>
        <ActivityAction x:TypeArguments="ui:IExcelProcess">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="620,3845" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Default="C:\Users\LENOVO\Documents\UiPath\Extract_FinancialData\Extract_FinancialData\Input\NSE" Name="FileLocation" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" SensitivityLabel="{x:Null}" DisplayName="Copy Input file columns to Output Excel" sap:VirtualizedContainerService.HintSize="586,1294" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_2" ResizeWindow="None" SensitivityOperation="None" TemplatePath="Output\Report.xlsx" UseTemplate="True" WorkbookPath="Output\Report.xlsx">
              <ueab:ExcelApplicationCard.Body>
                <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="OutputExcel" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="536,970" sap2010:WorkflowViewState.IdRef="Sequence_15">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" SensitivityLabel="{x:Null}" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="502,910" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_3" ResizeWindow="None" SensitivityOperation="None" TemplatePath="Input\Input_File.xlsx" UseTemplate="True" WorkbookPath="Input\Input_File.xlsx">
                      <ueab:ExcelApplicationCard.Body>
                        <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="InputExcel" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="468,595" sap2010:WorkflowViewState.IdRef="Sequence_16">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ueab:CopyPasteRangeX DestinationRange="[OutputExcel.Sheet(&quot;Sheet1&quot;).Range(&quot;B:B&quot;)]" DisplayName="Copy/Paste Range" sap:VirtualizedContainerService.HintSize="434,272" sap2010:WorkflowViewState.IdRef="CopyPasteRangeX_1" PasteOptions="All" SourceRange="[InputExcel.Sheet(&quot;Sheet1&quot;).Range(&quot;A:A&quot;)]" Transpose="False" />
                            <ueab:CopyPasteRangeX DestinationRange="[OutputExcel.Sheet(&quot;Sheet1&quot;).Range(&quot;A:A&quot;)]" DisplayName="Copy/Paste Range" sap:VirtualizedContainerService.HintSize="434,263" sap2010:WorkflowViewState.IdRef="CopyPasteRangeX_2" PasteOptions="All" SourceRange="[InputExcel.Sheet(&quot;Sheet1&quot;).Range(&quot;C:C&quot;)]" Transpose="False" />
                          </Sequence>
                        </ActivityAction>
                      </ueab:ExcelApplicationCard.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ueab:ExcelApplicationCard>
                  </Sequence>
                </ActivityAction>
              </ueab:ExcelApplicationCard.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ueab:ExcelApplicationCard>
            <ui:ForEachFileX DisplayName="For Each File in Folder" Folder="[FileLocation]" sap:VirtualizedContainerService.HintSize="586,2491" sap2010:WorkflowViewState.IdRef="ForEachFileX_1" IncludeSubDirectories="False" OrderBy="NameAscFirst" SkipFolderWithoutPermission="False">
              <ui:ForEachFileX.Body>
                <ActivityAction x:TypeArguments="si:FileInfo, x:Int32">
                  <ActivityAction.Argument1>
                    <DelegateInArgument x:TypeArguments="si:FileInfo" Name="CurrentFile" />
                  </ActivityAction.Argument1>
                  <ActivityAction.Argument2>
                    <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                  </ActivityAction.Argument2>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="552,2208" sap2010:WorkflowViewState.IdRef="Sequence_3">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Name="FileName" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:ReadCsvFile PathResource="{x:Null}" DataTable="[dtNSEData]" Delimitator="Comma" DelimitatorForViewModel="Comma" DisplayName="Read CSV" FilePath="[CurrentFile.FullName]" sap:VirtualizedContainerService.HintSize="518,186" sap2010:WorkflowViewState.IdRef="ReadCsvFile_1" />
                    <Assign sap:VirtualizedContainerService.HintSize="518,114" sap2010:WorkflowViewState.IdRef="Assign_7">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[FileName]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[System.IO.Path.GetFileNameWithoutExtension(CurrentFile.FullName)]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" SensitivityLabel="{x:Null}" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="518,1848" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" ResizeWindow="None" SensitivityOperation="None" TemplatePath="[&quot;Input\NSE\Excel\&quot; + FileName + &quot;.xlsx&quot;]" UseTemplate="True" WorkbookPath="[&quot;C:\Users\LENOVO\Documents\UiPath\Extract_FinancialData\Extract_FinancialData\Input\NSE\Excel\&quot; + FileName +&quot;.xlsx&quot;]">
                      <ueab:ExcelApplicationCard.Body>
                        <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="NSEexcel" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="484,1533" sap2010:WorkflowViewState.IdRef="Sequence_4">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="s:DateTime" Name="LastMonthEnd" />
                              <Variable x:TypeArguments="sd:DataTable" Name="FilteredDtNSEDataExcel" />
                              <Variable x:TypeArguments="s:DateTime" Name="LastMonthStart" />
                              <Variable x:TypeArguments="x:String" Name="OpenAvg" />
                              <Variable x:TypeArguments="x:String" Name="HighAvg" />
                              <Variable x:TypeArguments="x:String" Name="LowAvg" />
                              <Variable x:TypeArguments="x:String" Name="ltpAvg" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ueab:WriteRangeX Destination="[NSEexcel.Sheet(&quot;Sheet1&quot;)]" DisplayName="Write DataTable to Excel" sap:VirtualizedContainerService.HintSize="450,191" sap2010:WorkflowViewState.IdRef="WriteRangeX_1" IgnoreEmptySource="False" Source="[dtNSEData]" />
                            <Assign sap:VirtualizedContainerService.HintSize="450,114" sap2010:WorkflowViewState.IdRef="Assign_8">
                              <Assign.To>
                                <OutArgument x:TypeArguments="s:DateTime">[LastMonthStart]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="s:DateTime">[New DateTime(DateTime.Now.AddMonths(-1).Year, DateTime.Now.AddMonths(-1).Month, 1)]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="450,114" sap2010:WorkflowViewState.IdRef="Assign_9">
                              <Assign.To>
                                <OutArgument x:TypeArguments="s:DateTime">[LastMonthEnd]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="s:DateTime">[lastMonthStart.AddMonths(1).AddDays(-1)]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ueab:FilterX ClearFilter="False" ColumnName="Date " DisplayName="Filter" HasHeaders="True" sap:VirtualizedContainerService.HintSize="450,201" sap2010:WorkflowViewState.IdRef="FilterX_1" Range="[NSEexcel.Sheet(&quot;Sheet1&quot;)]">
                              <ueab:FilterX.FilterArgument>
                                <ueabf:FilterArgument Mode="Advanced">
                                  <ueabf:FilterArgument.AdvancedFiltersArgument>
                                    <ueabf:AdvancedFilterArgument LogicalOperator="And">
                                      <ueabf:AdvancedFilterArgument.Condition1>
                                        <ueabf:AdvancedFilterCondition Operator="GTE" Value="[LastMonthStart.ToString]" />
                                      </ueabf:AdvancedFilterArgument.Condition1>
                                      <ueabf:AdvancedFilterArgument.Condition2>
                                        <ueabf:AdvancedFilterCondition Operator="LTE" Value="[LastMonthEnd.ToString]" />
                                      </ueabf:AdvancedFilterArgument.Condition2>
                                    </ueabf:AdvancedFilterArgument>
                                  </ueabf:FilterArgument.AdvancedFiltersArgument>
                                  <ueabf:FilterArgument.BasicFiltersArgument>
                                    <ueabf:BasicFilterArgument>
                                      <ueabf:BasicFilterArgument.BasicFilters>
                                        <scg:List x:TypeArguments="InArgument(x:String)" Capacity="1">
                                          <x:Null />
                                        </scg:List>
                                      </ueabf:BasicFilterArgument.BasicFilters>
                                    </ueabf:BasicFilterArgument>
                                  </ueabf:FilterArgument.BasicFiltersArgument>
                                </ueabf:FilterArgument>
                              </ueab:FilterX.FilterArgument>
                            </ueab:FilterX>
                            <ueab:AutoFitX Columns="True" DisplayName="Autofit Range" sap:VirtualizedContainerService.HintSize="450,148" sap2010:WorkflowViewState.IdRef="AutoFitX_1" Range="[NSEexcel.Sheet(&quot;Sheet1&quot;)]" Rows="True" />
                            <ueab:ReadRangeX DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="450,201" sap2010:WorkflowViewState.IdRef="ReadRangeX_1" Range="[NSEexcel.Sheet(&quot;Sheet1&quot;)]" SaveTo="[FilteredDtNSEDataExcel]" />
                            <Assign sap:VirtualizedContainerService.HintSize="450,114" sap2010:WorkflowViewState.IdRef="Assign_17">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[OpenAvg]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[FilteredDtNSEDataExcel.AsEnumerable().Average(Function(row) If(IsNumeric(row.Field(Of String)("OPEN ")), CDbl(row.Field(Of String)("OPEN ")), 0)).ToString("F2")]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="450,114" sap2010:WorkflowViewState.IdRef="Assign_18">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[HighAvg]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[FilteredDtNSEDataExcel.AsEnumerable().Average(Function(row) If(IsNumeric(row.Field(Of String)("HIGH ")), CDbl(row.Field(Of String)("HIGH ")), 0)).ToString("F2")]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="450,114" sap2010:WorkflowViewState.IdRef="Assign_19">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[LowAvg]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[FilteredDtNSEDataExcel.AsEnumerable().Average(Function(row) If(IsNumeric(row.Field(Of String)("LOW ")), CDbl(row.Field(Of String)("LOW ")), 0)).ToString("F2")]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="450,114" sap2010:WorkflowViewState.IdRef="Assign_20">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[ltpAvg]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[FilteredDtNSEDataExcel.AsEnumerable().Average(Function(row) If(IsNumeric(row.Field(Of String)("ltp ")), CDbl(row.Field(Of String)("ltp ")), 0)).ToString("F2")]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Sequence DisplayName="Update SummaryReportFileColumns" sap:VirtualizedContainerService.HintSize="484,654" sap2010:WorkflowViewState.IdRef="Sequence_17">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" SensitivityLabel="{x:Null}" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="450,594" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_4" ResizeWindow="None" SensitivityOperation="None" TemplatePath="Output\Report.xlsx" UseTemplate="True" WorkbookPath="Output\Report.xlsx">
                                <ueab:ExcelApplicationCard.Body>
                                  <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="ReportExcel" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="416,279" sap2010:WorkflowViewState.IdRef="Sequence_18">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ueab:WriteCellX AutoIncrementRow="True" Cell="[ReportExcel.Sheet(&quot;Sheet1&quot;).Cell(&quot;C2&quot;)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="382,57" sap2010:WorkflowViewState.IdRef="WriteCellX_9" Value="[OpenAvg]">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ueab:WriteCellX>
                                      <ueab:WriteCellX AutoIncrementRow="True" Cell="[ReportExcel.Sheet(&quot;Sheet1&quot;).Cell(&quot;D2&quot;)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="382,57" sap2010:WorkflowViewState.IdRef="WriteCellX_10" Value="[LowAvg]">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ueab:WriteCellX>
                                      <ueab:WriteCellX AutoIncrementRow="True" Cell="[ReportExcel.Sheet(&quot;Sheet1&quot;).Cell(&quot;E2&quot;)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="382,57" sap2010:WorkflowViewState.IdRef="WriteCellX_11" Value="[HighAvg]">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ueab:WriteCellX>
                                      <ueab:WriteCellX AutoIncrementRow="True" Cell="[ReportExcel.Sheet(&quot;Sheet1&quot;).Cell(&quot;F2&quot;)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="382,48" sap2010:WorkflowViewState.IdRef="WriteCellX_12" Value="[ltpAvg]">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ueab:WriteCellX>
                                    </Sequence>
                                  </ActivityAction>
                                </ueab:ExcelApplicationCard.Body>
                              </ueab:ExcelApplicationCard>
                            </Sequence>
                          </Sequence>
                        </ActivityAction>
                      </ueab:ExcelApplicationCard.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ueab:ExcelApplicationCard>
                  </Sequence>
                </ActivityAction>
              </ui:ForEachFileX.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEachFileX>
          </Sequence>
        </ActivityAction>
      </ueab:ExcelProcessScopeX.Body>
    </ueab:ExcelProcessScopeX>
  </Sequence>
</Activity>